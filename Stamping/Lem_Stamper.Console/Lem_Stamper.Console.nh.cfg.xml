<?xml version="1.0" encoding="utf-8" ?>
<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
  <session-factory>
    <property name="cache.use_second_level_cache">true</property>
    <property name="cache.use_query_cache">true</property>
    <property name="cache.default_expiration">600</property>
    <!-- 10 minutes -->
    <class-cache
      class="Lemoine.GDBPersistentClasses.Computer, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Config, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Display, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Field, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Machine, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineModule, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineMonitoringType, Pulse.Database"
      usage="read-only" />
    <!-- Do not add MonitoredMachine: You may only specify a cache for root <class> mappings, see #171833086 -->
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.OperationType, Pulse.Database"
        usage="read-only" /-->
    <class-cache
      class="opseq"
      usage="read-write" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Stamp, Pulse.Database"
      usage="read-write" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Unit, Pulse.Database"
      usage="read-only" />
  </session-factory>
</hibernate-configuration>
