<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="wizard" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>