<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
  namespace="Lemoine.GDBPersistentClasses"
  assembly="Pulse.Database">
  <class name="CncAlarm" table="cncalarm">
    <id name="Id" column="cncalarmid">
      <generator class="native">
        <param name="sequence">cncalarm_cncalarmid_seq</param>
      </generator>
    </id>
    <version name="Version" column="cncalarmversion" />
    <property name="Display" column="display"
              update="false" insert="false" />
    <!-- using the additional generated="always" instruction would be better
         but it does not use the secondary key yet and patching NHibernate again is necessary for that,
         else there are many serialization failure.
         I think this is ok for the moment because the application that creates operationslots is not the same
         as the application that uses display -->
    <!-- An alternative solution but that is not better, using formula: -->
    <!--property name="Display"
              formula="(select operationslot.display from operationslot where operationslot.operationslotid = operationslotid and operationslot.machineid = machineid)"
              generated="always" /-->
    <many-to-one name="MachineModule"
                 access="nosetter.camelcase-m-underscore"
                 class="MachineModule"
                 column="machinemoduleid"
                 not-null="true" />
    <property name="CncInfo" column="cncalarmcncinfo"
              access="nosetter.camelcase-m-underscore"
              type="Lemoine.NHibernateTypes.CitextEmptyIsNullType, Lemoine.Database"
              not-null="true" />
    <property name="CncSubInfo" column="cncalarmcncsubinfo"
              access="nosetter.camelcase-m-underscore"
              type="Lemoine.NHibernateTypes.CitextEmptyIsNullType, Lemoine.Database" />
    <property name="Type" column="cncalarmtype"
              access="nosetter.camelcase-m-underscore"
              type="Lemoine.NHibernateTypes.CitextEmptyIsNullType, Lemoine.Database"
              not-null="true" />
    <property name="Number" column="cncalarmnumber"
              access="nosetter.camelcase-m-underscore"
              not-null="true" />    
    <property name="Message" column="cncalarmmessage" />
    <property name="Properties" column="cncalarmproperties"
              access="nosetter.camelcase-m-underscore"
              type="Lemoine.NHibernateTypes.JsonAsDictionaryType, Lemoine.Database"
              not-null="true" />
    <property name="DateTimeRange" column="cncalarmdatetimerange"
              access="nosetter.camelcase-m-underscore"
              type="Lemoine.NHibernateTypes.UTCDateTimeRangeType, Lemoine.Database"
              not-null="true" />
    <many-to-one name="Severity" column="cncalarmseverityid"
                 access="nosetter.camelcase-m-underscore"
                 class="CncAlarmSeverity"
                 update="false" insert="false" />
  </class>
</hibernate-mapping>
