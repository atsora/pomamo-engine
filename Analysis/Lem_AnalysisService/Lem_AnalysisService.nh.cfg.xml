<?xml version="1.0"?>
<hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
  <session-factory>
    <property name="cache.use_second_level_cache">true</property>
    <property name="cache.use_query_cache">true</property>
    <property name="cache.default_expiration">600</property>
    <!-- 10 minutes -->
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.AutoSequence, Pulse.Database"
        usage="read-write" /-->
    <class-cache
      class="Lemoine.GDBPersistentClasses.AutoMachineStateTemplate, Pulse.Database"
      usage="read-only" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.BetweenCycles, Pulse.Database"
        usage="read-write" /-->
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.CncValue, Pulse.Database"
        usage="read-only" /-->
    <class-cache
      class="Lemoine.GDBPersistentClasses.Cell, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Company, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Computer, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Config, Pulse.Database"
      usage="read-only" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.CycleCountSummary, Pulse.Database"
        usage="read-write" /-->
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.CycleDurationSummary, Pulse.Database"
        usage="read-write" /-->
    <class-cache
      class="Lemoine.GDBPersistentClasses.DaySlot, Pulse.Database"
      usage="read-write" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Department, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Display, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.DayTemplate, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.DayTemplateItem, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.EventLevel, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.EventLongPeriodConfig, Pulse.Database"
      usage="read-only" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.Fact, Pulse.Database"
        usage="read-only" /-->
    <class-cache
      class="Lemoine.GDBPersistentClasses.Field, Pulse.Database"
      usage="read-only" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.IntermediateWorkPieceByMachineSummary, Pulse.Database"
        usage="read-write" /-->
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.IntermediateWorkPieceSummary, Pulse.Database"
        usage="read-write" /-->
    <!-- The target may be updated in Lem_Settings -->
    <class-cache
      class="Lemoine.GDBPersistentClasses.Machine, Pulse.Database"
      usage="read-only" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.MachineActivitySummary, Pulse.Database"
        usage="read-write" /-->
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineCategory, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineCncVariable, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineFilter, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineFilterItem, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineMode, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineModeDefaultReason, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineModule, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineModuleAnalysisStatus, Pulse.Database"
      usage="read-write" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineMonitoringType, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineObservationState, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineStateTemplate, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineStatus, Pulse.Database"
      usage="read-write" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MachineSubCategory, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.MonitoredMachineAnalysisStatus, Pulse.Database"
      usage="read-write" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.NonConformanceReason, Pulse.Database"
      usage="read-only" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.OperationCycle, Pulse.Database"
        usage="read-write" /-->
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.OperationType, Pulse.Database"
        usage="read-only" /-->
    <class-cache
      class="Lemoine.GDBPersistentClasses.Package, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.PackagePluginAssociation, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Plugin, Pulse.Database"
      usage="read-write" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Reason, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.ReasonGroup, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.ReasonProposal, Pulse.Database"
      usage="read-write" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.ReasonSelection, Pulse.Database"
      usage="read-only" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.ReasonSummary, Pulse.Database"
        usage="read-write" /-->
    <class-cache
      class="Lemoine.GDBPersistentClasses.Revision, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="opseq"
      usage="read-write" />
    <!-- read-write because some plugins create live operations and sequences -->
    <class-cache
      class="Lemoine.GDBPersistentClasses.SequenceMilestone, Pulse.Database"
      usage="read-write" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.Service, Pulse.Database"
        usage="read-write" /-->
    <!-- Service is a child of Updater -->
    <class-cache
      class="Lemoine.GDBPersistentClasses.Shift, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.ShiftTemplate, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.ShiftTemplateBreak, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.ShiftTemplateItem, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Stamp, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Translation, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Unit, Pulse.Database"
      usage="read-only" />
    <class-cache
      class="Lemoine.GDBPersistentClasses.Updater, Pulse.Database"
      usage="read-only" />
    <!--class-cache
        class="Lemoine.GDBPersistentClasses.User, Pulse.Database"
        usage="read-only" /-->
    <!-- User is a child of Updater -->
    <class-cache
      class="Lemoine.GDBPersistentClasses.WorkOrderStatus, Pulse.Database"
      usage="read-only" />
  </session-factory>
</hibernate-configuration>
