<?xml version="1.0" encoding="utf-8"?>
<Project>
<!-- Directory.Build.targets is imported from Microsoft.Common.targets after importing .targets files from NuGet packages. 
     So, it can override properties and targets defined in most of the build logic.
     More info in https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2019 -->

  <PropertyGroup Condition=" '$(KeyFile)' != '' And Exists('$(KeyFile)')">
    <Keyfile>$(KeyFile)</Keyfile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release'">
    <DebugType>none</DebugType>   <!-- disable .pdb generation -->
    <Optimize>true</Optimize>
    <Obfuscate>true</Obfuscate>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <CopyOutputSymbolsToPublishDirectory>false</CopyOutputSymbolsToPublishDirectory>    <!-- don't copy .pdb files in publish outputdir - should not be needed because of above DebugType=None -->
    <CopyDocumentationFileToOutputDirectory>false</CopyDocumentationFileToOutputDirectory>    <!-- don't copy xml documentation to outputdir -->
    <AllowedReferenceRelatedFileExtensions>none</AllowedReferenceRelatedFileExtensions>   <!-- don't include reference assemblies option file like .pdb or .xml - used fo nhibernate,sharedmemory,... -->
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' != 'Release'">
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
  </PropertyGroup>
  
  <!-- Libraries - platforms properties -->
  <PropertyGroup Condition=" '$(OutputType)' == 'Library' And $(AssemblyName.EndsWith('UnitTests')) == 'false'">
    <Platforms>AnyCPU</Platforms>
    <CopyLocalLockFileAssemblies>false</CopyLocalLockFileAssemblies>  <!-- don't copy all dependent assemblies to OutDir (Microsoft, System, ...) -->
    <ProjectReference>
      <Private>False</Private><!-- Set Private=false in all ProjectReference -> don't copy referenced dll files into OutDir -->
    </ProjectReference>
  </PropertyGroup>
  
  <!-- Unit tests -->
  <PropertyGroup Condition=" '$(OutputType)' == 'Library' And $(AssemblyName.EndsWith('UnitTests')) == 'true' And $(AssemblyName) != 'Lemoine.UnitTests' ">
    <Platforms>x86</Platforms>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects> <!-- activate assembly auto-bindings because off by default for library -->
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
  </PropertyGroup>
  
  <!-- Libraries - documentation -->
  <PropertyGroup Condition=" ( '$(OutputType)' == 'Library' And $(AssemblyName.EndsWith('UnitTests')) == 'false' And $(AssemblyName.StartsWith('Lemoine.Plugin')) == 'false') And ( '$(Configuration)' != 'Release' ) ">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  
  <!-- ALL - target to copy the compiled files from VisualStudio output directory to a custom directory (pulse_exe_xxx) - automatically launch when the property CustomOutDir is set in command line -->
  <Target Name="CopyFilesToCustomDirectory" AfterTargets="CopyFilesToOutputDirectory" Condition=" '$(CustomOutDir)' != '' ">
    <Message Text="==> COPY $(AssemblyName) to $(CustomOutDir)" Importance="high"></Message>
    <MakeDir Directories="$(CustomOutDir)" Condition="!Exists('$(CustomOutDir)')"/>
    <ItemGroup>
      <_CopyItems Include="$(OutDir)\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(_CopyItems)" DestinationFolder="$(CustomOutDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" />
  </Target>
  
</Project>
