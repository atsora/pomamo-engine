<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonPrevious.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAhlJ
        REFUOE9j+P//P0FsVcySYl3KchSbHIYAMgZq5LEuYVkT2a35DcgGCmGqwRCAYaAGXasSlof1K8N+nri/
        8T9JBgAVpzpXCXxdcLju396bi/+ferCVOAOAisBOju3V+7b50rT/q853/J94IOX/caALrMtYvoMMQcEl
        LC+QNQOdzPqwdkXor61Xpv+fcijrf/uu8P/de2P+H7m75v/Re+v+HwNiEA3iH7qzCmwITHOqa43wt+l7
        i/4tP9vyv2Gb7//arZ7/m7b7/2/dGfK/Y3fE/849kf+79kSBaRB//61lEAOA0TM3qkfn69KTTf8n7E/+
        X7DW9H/pJpv/1duc/tfvdP9ftd3pf+EG0/+pK9T/xy2W/Z+wROF/xkrt/zuuzUYYEN6p/nXukfL/7btD
        /qetUfqftl7hf9J68f8xa/n+R67h/h+xkut/6BLO/4Hz2P/7zWID48Wn6lC94FjJ9619W/S/aadS/6du
        lfyfsJX3f+J2vv+J2/j+x23m/R+1lvt/2DKEISgGwAIR6JqHeYtsfy69Wva/5oTx/8xDgv/TDwr+X3e7
        6f+aG43/V15p+L/sfD1YM4YBUEN4gNG1JqhT7uviq0X/p98K+Z93UvT/hnvN/20rCUQjmkGp9pVcX3uP
        RP5beicPbABIA7o6EMYQgGGgBl2bMpaH2YvMfqy8Xku6ASAM1AT2km+L5FeyDIBhoGYc2fk/AwADlIHR
        0aI+6wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="buttonNext.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAhxJ
        REFUOE+dk99Lk1EcxnfxZj+0aRDYReSdF0lkFF1sGmEReKGFqa1pirFSaimxNdYKbTLB9U6G3amvZbhc
        7V2tH+DcprNtutKFkD8amknSTf/AO9OLPZ33hYmzcxFefOCc55zzfHnO9xwZgH9Q3mMmFTrmBm1tO1SR
        HMZV29GEQs/wZJxF25OCKooGsVUv2nn1OjFZJfNjtH0iVFE0mPkVQGSZhyNqSZ4z5QhEo0aSkQq/xQNb
        URqYtdjPYfRMtODdbDe88xzq7ScSSj3jJutpkaRqH787EV52YfLHa0RXPPi08laiO6SBPdSA/s86BBaf
        wcyrNxT6XWmRJIOxxUF0+CrRGVCBHa0BO1YLW7AWXSFCWI3H4SrYIip45m3gIqbkhYcHNyNJBr44B71H
        iWb3STS9KsBt93EYh4vRHiyFNXIJnRNlsIRL8Sh4Hn3Td+CasaLOXpgg7e6XDAanW1Hem7FJxcBuXHHu
        Rc2bTNS/l+PmSC60/jy0+PPRFa3C0ykDqq35AtXgIpeBSsceqN2ZqPuwH9d9cmhGs6EdPwxuthFs4Fqy
        xCRPjyAapHB8aYXzaxtcC2Y0eEn18Ry0xU7h5ZIRd4fOrJMObbtEShuLjMwa/80Mjf8AnsxV4EVch8vs
        EaHIQGnj1kkK0YSPmzGwoAUbUiXP3t8nkEL0h0QTRYOhuQe49fz0H1J1Z0+5zHJIIHl39pn+/ztD9hew
        N4Sg3kWV0gAAAABJRU5ErkJggg==
</value>
  </data>
</root>